[core]
  excludesfile = ~/.gitignore_global
  editor = vim

[user]
  name = Loc Phan

[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = red reverse
  local = blue
  remote = green
[color "diff"]
  meta = yellow
  frag = magenta
  old = red bold
  new = green
  plain = white
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  prune = fetch --prune
  # Prune deletes any local branch which has been deleted from the remote
  # https://git-scm.com/docs/git-fetch#git-fetch--p

  stash-all = stash save --include-untracked
  # ensures that when you stash,
  # you catch the new files you haven't caught with a git add yet
  # https://git-scm.com/docs/git-stash

  # conflict/merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"

  # list remotes
  rem="!git config -l | grep remote.*url | tail -n +2"

  # apply patch from other local repo
  lap = "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"

  # open markdown files edited in last commit
  last = "!vim $(git show HEAD --format="" --name-only | grep -e .*md$ | xargs)"

  # open just created markdown in working directory
  newmd = "!vim $(git status -s | awk {'print $2'})"

  # initial empty commit
  empty = "!git commit -am\"[empty] Initial commit\" --allow-empty"

  # list all aliases
  la = "!git config -l | grep alias | cut -c 7-"

[push]
  default = simple
  # push the current branch back to the branch whose changes are usually integrated into the current branch
  # refuse to push if the upstream branchâ€™s name is different from the local one
  # https://git-scm.com/docs/git-config#git-config-pushdefault

  followTags = true
  # Because I get sick of telling git to do it manually
  # https://git-scm.com/docs/git-config#git-config-pushfollowTags

[commit]
  gpgSign = false
  # other people can trust that the changes you've made really were made by you
  # https://help.github.com/articles/about-gpg/
  # https://git-scm.com/docs/git-config#git-config-commitgpgSign

[status]
  showUntrackedFiles = all
  # Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
  # https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles

[pull]
  default = current
[diff]
  tool = icdiff
  mnemonicprefix = true
[difftool]
  prompt = false
[difftool "icdiff"]
  cmd = icdiff $LOCAL $REMOTE
[apply]
  whitespace = nowarn

[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true

[help]
  autocorrect = 1
[http]
  sslVerify = false

# replicate colorful, GitHub-style, split diffs in a two column view
# https://github.com/jeffkaufman/icdiff
[icdiff]
  options = --line-numbers
